import torch.nn as nnimport torch.nn.functional as Fclass SimpleCNN(nn.Module):    def __init__(self):        super(SimpleCNN, self).__init__()        self.conv1 = nn.Conv2d(1, 32, (5, 5), (2, 2))        self.conv2 = nn.Conv2d(32, 64, (5, 5), (2, 2))        self.max_pool = nn.MaxPool2d(1)        self.flatten = nn.Flatten()        self.relu = nn.ReLU()        self.fc = nn.Sequential(            nn.Linear(1024, 512),            nn.Dropout(),            nn.Linear(512, 10)        )    def forward(self, x):        x = self.conv1(x)        x = self.max_pool(x)        x = self.conv2(x)        x = self.max_pool(x)        x = self.flatten(x)        x = self.relu(x)        y_hat = F.log_softmax(self.fc(x), dim=-1)        return y_hat