import torchimport numpy as npimport onnxruntimedef to_numpy(tensor):    return tensor.detach().cpu().numpy() if tensor.requires_grad else tensor.cpu().numpy()test_input = torch.randn(1, 28, 28)ort_session = onnxruntime.InferenceSession('./data/MNIST.onnx')input_name = ort_session.get_inputs()[0].nameort_inputs = {input_name: test_input.astype(np.float32)}ort_outputs = ort_session.run(None, ort_inputs)test_result = np.testing.assert_allclose(to_numpy(test_input), ort_outputs[0], rtol=1e-3, atol=1e-5)print(test_result)