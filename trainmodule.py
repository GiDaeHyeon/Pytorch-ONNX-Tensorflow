import torch.nn as nnimport torch.optim as optimimport pytorch_lightning as plfrom model import SimpleCNNclass TrainModule(pl.LightningModule):    def __init__(self):        super(TrainModule, self).__init__()        self.model = SimpleCNN()        self.loss_fn = nn.NLLLoss()    def configure_optimizers(self):        optimizer = optim.AdamW(lr=1e-3, params=self.model.parameters())        return optimizer    def training_step(self, batch, batch_idx):        x, y = batch        y_hat = self.model(x)        loss = self.loss_fn(y_hat, y)        self.log('train_loss', loss)        self.log('train_loss_epoch', loss, on_step=False, on_epoch=True)        return {'loss': loss}    def validation_step(self, batch, batch_idx):        x, y = batch        y_hat = self.model(x)        loss = self.loss_fn(y_hat, y)        self.log('val_loss', loss, on_step=False, on_epoch=True)